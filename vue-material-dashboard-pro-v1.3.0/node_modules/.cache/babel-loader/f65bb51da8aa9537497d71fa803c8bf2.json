{"remainingRequest":"D:\\IBCT\\Vue\\Login-Register-IBCT\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\babel-loader\\lib\\index.js!D:\\IBCT\\Vue\\Login-Register-IBCT\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\IBCT\\Vue\\Login-Register-IBCT\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IBCT\\Vue\\Login-Register-IBCT\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\src\\pages\\Dashboard\\Pages\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IBCT\\Vue\\Login-Register-IBCT\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\src\\pages\\Dashboard\\Pages\\Register.vue","mtime":1572255424476},{"path":"D:\\IBCT\\Vue\\Login-Register-IBCT\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IBCT\\Vue\\Login-Register-IBCT\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IBCT\\Vue\\Login-Register-IBCT\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IBCT\\Vue\\Login-Register-IBCT\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport { SignupCard } from \"@/components\";\nexport default {\n  components: {\n    SignupCard: SignupCard\n  },\n  data: function data() {\n    return {\n      errors: [],\n      errorpassconfirm: [],\n      username: '',\n      boolean: false,\n      email: '',\n      reg: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,24}))$/,\n      password: '',\n      passwordconfirm: ''\n    };\n  },\n  methods: {\n    checkForm: function checkForm() {\n      if (this.username && this.email && this.password && this.passwordconfirm) {\n        this.errors = [];\n        this.confirm();\n        return true;\n      } else {\n        this.errors = [];\n\n        if (this.username == '') {\n          this.errors.push(\"Nhập UserName\");\n        }\n\n        ;\n\n        if (this.email == '') {\n          this.errors.push(\"Nhập email\");\n        }\n\n        ;\n\n        if (this.password == '') {\n          this.errors.push(\"Nhập password\");\n        }\n\n        ;\n\n        if (this.passwordconfirm == '') {\n          this.errors.push(\"Nhập passwordconfirm\");\n        }\n      }\n    },\n    isEmailValid: function isEmailValid() {\n      return this.email == \"\" ? \"\" : this.reg.test(this.email) ? 'has-success' : 'has-error';\n    },\n    confirm: function confirm() {\n      if (this.password === this.passwordconfirm) {\n        this.errorpassconfirm = [];\n        this.$refs['my-modal'].show();\n        return true;\n      } else {\n        this.errorpassconfirm = [];\n        this.errorpassconfirm.push(\"Nhập lại Password\");\n        return false;\n      }\n    },\n    hideModal: function hideModal() {\n      this.$refs['my-modal'].hide();\n    },\n    toggleModal: function toggleModal() {\n      // We pass the ID of the button that we want to return focus to\n      // when the modal has hidden\n      this.$swal('Sucess');\n      this.$refs['my-modal'].toggle('#toggle-btn');\n    },\n    created: function created() {\n      var _this = this;\n\n      axios.get(\"http://localhost:8085/api/auth/signup\").then(function (response) {\n        _this.posts = response.data;\n      }).catch(function (e) {\n        _this.errors.push(e);\n      });\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,UAAA,QAAA,cAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,gBAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,OAAA,EAAA,KAJA;AAKA,MAAA,KAAA,EAAA,EALA;AAMA,MAAA,GAAA,EAAA,0JANA;AAOA,MAAA,QAAA,EAAA,EAPA;AAQA,MAAA,eAAA,EAAA;AARA,KAAA;AAUA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA,EAAA,qBAAA;AAEA,UAAA,KAAA,QAAA,IAAA,KAAA,KAAA,IAAA,KAAA,QAAA,IAAA,KAAA,eAAA,EAAA;AACA,aAAA,MAAA,GAAA,EAAA;AACA,aAAA,OAAA;AACA,eAAA,IAAA;AACA,OAJA,MAIA;AACA,aAAA,MAAA,GAAA,EAAA;;AACA,YAAA,KAAA,QAAA,IAAA,EAAA,EAAA;AACA,eAAA,MAAA,CAAA,IAAA,CAAA,eAAA;AACA;;AAAA;;AACA,YAAA,KAAA,KAAA,IAAA,EAAA,EAAA;AACA,eAAA,MAAA,CAAA,IAAA,CAAA,YAAA;AACA;;AAAA;;AACA,YAAA,KAAA,QAAA,IAAA,EAAA,EAAA;AACA,eAAA,MAAA,CAAA,IAAA,CAAA,eAAA;AACA;;AAAA;;AACA,YAAA,KAAA,eAAA,IAAA,EAAA,EAAA;AACA,eAAA,MAAA,CAAA,IAAA,CAAA,sBAAA;AACA;AACA;AACA,KAtBA;AAwBA,IAAA,YAAA,EAAA,wBAAA;AACA,aAAA,KAAA,KAAA,IAAA,EAAA,GAAA,EAAA,GAAA,KAAA,GAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,GAAA,aAAA,GAAA,WAAA;AACA,KA1BA;AA4BA,IAAA,OAAA,EAAA,mBAAA;AACA,UAAA,KAAA,QAAA,KAAA,KAAA,eAAA,EAAA;AACA,aAAA,gBAAA,GAAA,EAAA;AACA,aAAA,KAAA,CAAA,UAAA,EAAA,IAAA;AACA,eAAA,IAAA;AACA,OAJA,MAIA;AACA,aAAA,gBAAA,GAAA,EAAA;AACA,aAAA,gBAAA,CAAA,IAAA,CAAA,mBAAA;AACA,eAAA,KAAA;AACA;AACA,KAtCA;AAwCA,IAAA,SAxCA,uBAwCA;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,IAAA;AACA,KA1CA;AA4CA,IAAA,WA5CA,yBA4CA;AACA;AACA;AACA,WAAA,KAAA,CAAA,QAAA;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,MAAA,CAAA,aAAA;AACA,KAjDA;AAkDA,IAAA,OAlDA,qBAkDA;AAAA;;AACA,MAAA,KAAA,CAAA,GAAA,0CACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,OAHA,EAIA,KAJA,CAIA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA,OANA;AAOA;AA1DA;AAhBA,CAAA","sourcesContent":["<template>\n  <div class=\"md-layout\">\n    <div class=\"md-layout-item\">\n      <signup-card>\n        <h2 class=\"title text-center\" slot=\"title\">Register</h2>\n        \n        <div\n          class=\"md-layout-item mr-auto\"\n          slot=\"content-right\"\n        >\n            <p v-if=\"errors.length\">\n              <b>Lỗi</b>\n              <ul>\n                <li v-for=\"(error , index) in errors\" v-bind:key = \"index\">{{ error }}</li>\n              </ul>\n            </p>\n          <form >\n  \n            <div class=\"form-group\">\n              <label for=\"username\">UserName:</label>\n              <input type=\"text\" class=\"form-control\" id=\"username\" placeholder=\"Enter username\" name=\"username\" v-model=\"username\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"email\">Email:</label>\n              <div :class=\"['input-group', isEmailValid()]\">\n                <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\" name=\"email\" v-model=\"email\">\n              </div>\n            </div>\n            \n            <div class=\"form-group\">\n              <label for=\"pwd\">Password:</label>\n              <input  v-validate=\"'required'\" type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" name=\"password\" v-model=\"password\">\n            </div>\n            \n            <div class=\"form-group\">\n              <label for=\"pwd\">Password Confirm:</label>\n              <input v-validate=\"'required|confirmed:password'\"  type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password confirm\" name=\"passwordconfirm\" v-model=\"passwordconfirm\">\n            </div>\n            \n             <p v-if=\"errorpassconfirm.length\">\n              <b>Lỗi</b>\n              <ul>\n                <li v-for=\"(error , index) in errorpassconfirm\" v-bind:key = \"index\">{{ error }}</li>\n              </ul>\n            </p>\n          </form>\n          <button type=\"submit\" class=\"btn btn-primary\" v-on:click=\"checkForm \" >Đăng ký</button>\n\n          <b-modal ref=\"my-modal\" hide-footer title=\"Verification\">\n            <div class=\"d-block text-center\">\n              <h3>Hello!</h3>\n              <p>Đây có phải là email <b><i> {{email}} </i></b> của bạn. \n              Nếu đúng bấm Continue để tiếp tục.\n              Nếu không bấm Close để nhập  lại.</p>\n            </div>\n            <b-button class=\"mt-2\" variant=\"outline-warning\" block v-on:click=\"toggleModal\">Continue</b-button>\n            <b-button class=\"mt-3\" variant=\"outline-danger\" block v-on:click=\"hideModal\">Close</b-button>\n          </b-modal>\n        </div>\n      </signup-card>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from 'axios';\nimport { SignupCard } from \"@/components\";\n\nexport default {\n  components: {\n    SignupCard\n  },\n  data() {\n    return {\n      errors:[],\n      errorpassconfirm : [],\n      username: '',\n      boolean: false, \n      email: '',\n      reg: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,24}))$/,\n      password: '',\n      passwordconfirm: '' \n    }\n  },\n  methods: {\n        checkForm : function() {\n          \n          if(this.username && this.email && this.password && this.passwordconfirm){\n            this.errors = [];\n            this.confirm();\n            return true;\n          } else {\n            this.errors = [];\n            if(this.username=='') {\n              this.errors.push(\"Nhập UserName\");\n            };\n            if(this.email=='') {\n              this.errors.push(\"Nhập email\");\n            };\n            if(this.password=='') {\n              this.errors.push(\"Nhập password\");\n            };\n            if(this.passwordconfirm=='') {\n             this.errors.push(\"Nhập passwordconfirm\");\n            }\n          }\n        },\n\n        isEmailValid: function() {\n          return (this.email == \"\")? \"\" : (this.reg.test(this.email)) ? 'has-success' : 'has-error';\n        },\n\n        confirm : function () {\n          if ( this.password === this.passwordconfirm) {\n            this.errorpassconfirm = [];\n            this.$refs['my-modal'].show();\n            return true;\n          } else {\n            this.errorpassconfirm = [];\n            this.errorpassconfirm.push(\"Nhập lại Password\")\n            return false;\n          }\n        },\n\n        hideModal() {\n          this.$refs['my-modal'].hide()\n        },\n\n        toggleModal() {\n          // We pass the ID of the button that we want to return focus to\n          // when the modal has hidden\n          this.$swal('Sucess');\n          this.$refs['my-modal'].toggle('#toggle-btn')\n        },\n        created() {\n          axios.get(`http://localhost:8085/api/auth/signup`)\n          .then(response => {\n            this.posts = response.data\n          })\n          .catch(e => {\n            this.errors.push(e)\n          })\n        }\n      }\n};\n</script>\n<style>\n\n</style>\n"],"sourceRoot":"src/pages/Dashboard/Pages"}]}