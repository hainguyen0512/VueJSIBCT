{"remainingRequest":"D:\\IBCT\\Vue\\Template\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IBCT\\Vue\\Template\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\src\\pages\\Dashboard\\Forms\\ValidationForms\\TypeValidationForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IBCT\\Vue\\Template\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\src\\pages\\Dashboard\\Forms\\ValidationForms\\TypeValidationForm.vue","mtime":1559291170000},{"path":"D:\\IBCT\\Vue\\Template\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IBCT\\Vue\\Template\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IBCT\\Vue\\Template\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IBCT\\Vue\\Template\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { SlideYDownTransition } from \"vue2-transitions\";\nexport default {\n  components: {\n    SlideYDownTransition\n  },\n  data() {\n    return {\n      equalToSource: \"\",\n      equalToDest: \"\",\n      required: \"\",\n      email: \"\",\n      number: \"\",\n      url: \"\",\n      touched: {\n        required: false,\n        email: false,\n        number: false,\n        url: false,\n        equalToSource: false,\n        equalToDest: false\n      },\n      modelValidations: {\n        required: {\n          required: true\n        },\n        email: {\n          required: true,\n          email: true\n        },\n        number: {\n          required: true,\n          numeric: true\n        },\n        url: {\n          required: true,\n          url: true\n        },\n        equalToSource: {\n          required: true\n        },\n        equalToDest: {\n          required: true,\n          confirmed: \"equalToSource\"\n        }\n      }\n    };\n  },\n  methods: {\n    validate() {\n      this.$validator.validateAll().then(isValid => {\n        this.$emit(\"on-submit\", this.registerForm, isValid);\n      });\n    }\n  },\n  watch: {\n    required() {\n      this.touched.required = true;\n    },\n    email() {\n      this.touched.email = true;\n    },\n    number() {\n      this.touched.number = true;\n    },\n    url() {\n      this.touched.url = true;\n    },\n    equalToSource() {\n      this.touched.equalToSource = true;\n    },\n    equalToDest() {\n      this.touched.equalToDest = true;\n    }\n  }\n};\n",{"version":3,"sources":["TypeValidationForm.vue"],"names":[],"mappingsfile":"TypeValidationForm.vue","sourceRoot":"src/pages/Dashboard/Forms/ValidationForms","sourcesContent":["<template>\n  <form>\n    <md-card>\n      <md-card-header class=\"md-card-header-text md-card-header-green\">\n        <div class=\"card-text\">\n          <h4 class=\"title\">Type Validation</h4>\n        </div>\n      </md-card-header>\n\n      <md-card-content>\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-20 md-form-label\">\n            Required Text\n          </label>\n          <div class=\"md-layout-item\">\n            <md-field\n              :class=\"[\n                { 'md-error': errors.has('required') },\n                { 'md-valid': !errors.has('required') && touched.required }\n              ]\"\n            >\n              <md-input\n                v-model=\"required\"\n                data-vv-name=\"required\"\n                type=\"text\"\n                v-validate=\"modelValidations.required\"\n                required\n              >\n              </md-input>\n              <slide-y-down-transition>\n                <md-icon class=\"error\" v-show=\"errors.has('required')\"\n                  >close</md-icon\n                >\n              </slide-y-down-transition>\n              <slide-y-down-transition>\n                <md-icon\n                  class=\"success\"\n                  v-show=\"!errors.has('required') && touched.required\"\n                  >done</md-icon\n                >\n              </slide-y-down-transition>\n            </md-field>\n          </div>\n          <label class=\"md-layout-item md-size-20 md-label-on-right\">\n            <code>required</code>\n          </label>\n        </div>\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-20 md-form-label\">\n            Email\n          </label>\n          <div class=\"md-layout-item\">\n            <md-field\n              :class=\"[\n                { 'md-error': errors.has('email') },\n                { 'md-valid': !errors.has('email') && touched.email }\n              ]\"\n            >\n              <md-input\n                v-model=\"email\"\n                data-vv-name=\"email\"\n                type=\"text\"\n                v-validate=\"modelValidations.email\"\n                required\n              >\n              </md-input>\n              <slide-y-down-transition>\n                <md-icon class=\"error\" v-show=\"errors.has('email')\"\n                  >close</md-icon\n                >\n              </slide-y-down-transition>\n              <slide-y-down-transition>\n                <md-icon\n                  class=\"success\"\n                  v-show=\"!errors.has('email') && touched.email\"\n                  >done</md-icon\n                >\n              </slide-y-down-transition>\n            </md-field>\n          </div>\n          <label class=\"md-layout-item md-size-20 md-label-on-right\">\n            <code>email=\"true\"</code>\n          </label>\n        </div>\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-20 md-form-label\">\n            Number\n          </label>\n          <div class=\"md-layout-item\">\n            <md-field\n              :class=\"[\n                { 'md-error': errors.has('number') },\n                { 'md-valid': !errors.has('number') && touched.number }\n              ]\"\n            >\n              <md-input\n                v-model=\"number\"\n                data-vv-name=\"number\"\n                type=\"number\"\n                v-validate=\"modelValidations.number\"\n                required\n              >\n              </md-input>\n              <slide-y-down-transition>\n                <md-icon class=\"error\" v-show=\"errors.has('number')\"\n                  >close</md-icon\n                >\n              </slide-y-down-transition>\n              <slide-y-down-transition>\n                <md-icon\n                  class=\"success\"\n                  v-show=\"!errors.has('number') && touched.number\"\n                  >done</md-icon\n                >\n              </slide-y-down-transition>\n            </md-field>\n          </div>\n          <label class=\"md-layout-item md-size-20 md-label-on-right\">\n            <code>number=\"true\"</code>\n          </label>\n        </div>\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-20 md-form-label\">\n            Url\n          </label>\n          <div class=\"md-layout-item\">\n            <md-field\n              :class=\"[\n                { 'md-error': errors.has('url') },\n                { 'md-valid': !errors.has('url') && touched.url }\n              ]\"\n            >\n              <md-input\n                v-model=\"url\"\n                data-vv-name=\"url\"\n                type=\"url\"\n                v-validate=\"modelValidations.url\"\n                required\n              >\n              </md-input>\n              <slide-y-down-transition>\n                <md-icon class=\"errror\" v-show=\"errors.has('url')\"\n                  >close</md-icon\n                >\n              </slide-y-down-transition>\n              <slide-y-down-transition>\n                <md-icon\n                  class=\"success\"\n                  v-show=\"!errors.has('url') && touched.url\"\n                  >done</md-icon\n                >\n              </slide-y-down-transition>\n            </md-field>\n          </div>\n          <label class=\"md-layout-item md-size-20 md-label-on-right\">\n            <code>url=\"true\"</code>\n          </label>\n        </div>\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-20 md-form-label\">\n            Equal to\n          </label>\n          <div class=\"md-layout-item\">\n            <div class=\"md-layout\">\n              <div class=\"md-layout-item\">\n                <md-field\n                  :class=\"[\n                    { 'md-error': errors.has('equalToSource') },\n                    {\n                      'md-valid':\n                        !errors.has('equalToSource') && touched.equalToSource\n                    }\n                  ]\"\n                >\n                  <label>#idSource</label>\n                  <md-input\n                    v-model=\"equalToSource\"\n                    data-vv-name=\"equalToSource\"\n                    ref=\"equalToSource\"\n                    type=\"text\"\n                    v-validate=\"modelValidations.equalToSource\"\n                    required\n                  >\n                  </md-input>\n                  <slide-y-down-transition>\n                    <md-icon class=\"error\" v-show=\"errors.has('equalToSource')\"\n                      >close</md-icon\n                    >\n                  </slide-y-down-transition>\n                  <slide-y-down-transition>\n                    <md-icon\n                      class=\"success\"\n                      v-show=\"\n                        !errors.has('equalToSource') && touched.equalToSource\n                      \"\n                      >done</md-icon\n                    >\n                  </slide-y-down-transition>\n                </md-field>\n              </div>\n              <div class=\"md-layout-item\">\n                <md-field\n                  :class=\"[\n                    { 'md-error': errors.has('equalToDest') },\n                    {\n                      'md-valid':\n                        !errors.has('equalToDest') && touched.equalToDest\n                    }\n                  ]\"\n                >\n                  <label>#idDestination</label>\n                  <md-input\n                    v-model=\"equalToDest\"\n                    data-vv-name=\"equalToDest\"\n                    data-vv-as=\"equalToSource\"\n                    type=\"text\"\n                    v-validate=\"modelValidations.equalToDest\"\n                    required\n                  >\n                  </md-input>\n                  <slide-y-down-transition>\n                    <md-icon class=\"error\" v-show=\"errors.has('equalToDest')\"\n                      >close</md-icon\n                    >\n                  </slide-y-down-transition>\n                  <slide-y-down-transition>\n                    <md-icon\n                      class=\"success\"\n                      v-show=\"!errors.has('equalToDest') && touched.equalToDest\"\n                      >done</md-icon\n                    >\n                  </slide-y-down-transition>\n                </md-field>\n              </div>\n            </div>\n          </div>\n          <label class=\"md-layout-item md-size-20 md-label-on-right\">\n            <code>equalTo=\"#idSource\"</code>\n          </label>\n        </div>\n      </md-card-content>\n\n      <md-card-actions class=\"text-center\">\n        <md-button\n          native-type=\"submit\"\n          @click.native.prevent=\"validate\"\n          class=\"md-success\"\n          >Validate Inputs</md-button\n        >\n      </md-card-actions>\n    </md-card>\n  </form>\n</template>\n<script>\nimport { SlideYDownTransition } from \"vue2-transitions\";\nexport default {\n  components: {\n    SlideYDownTransition\n  },\n  data() {\n    return {\n      equalToSource: \"\",\n      equalToDest: \"\",\n      required: \"\",\n      email: \"\",\n      number: \"\",\n      url: \"\",\n      touched: {\n        required: false,\n        email: false,\n        number: false,\n        url: false,\n        equalToSource: false,\n        equalToDest: false\n      },\n      modelValidations: {\n        required: {\n          required: true\n        },\n        email: {\n          required: true,\n          email: true\n        },\n        number: {\n          required: true,\n          numeric: true\n        },\n        url: {\n          required: true,\n          url: true\n        },\n        equalToSource: {\n          required: true\n        },\n        equalToDest: {\n          required: true,\n          confirmed: \"equalToSource\"\n        }\n      }\n    };\n  },\n  methods: {\n    validate() {\n      this.$validator.validateAll().then(isValid => {\n        this.$emit(\"on-submit\", this.registerForm, isValid);\n      });\n    }\n  },\n  watch: {\n    required() {\n      this.touched.required = true;\n    },\n    email() {\n      this.touched.email = true;\n    },\n    number() {\n      this.touched.number = true;\n    },\n    url() {\n      this.touched.url = true;\n    },\n    equalToSource() {\n      this.touched.equalToSource = true;\n    },\n    equalToDest() {\n      this.touched.equalToDest = true;\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.md-card .md-card-actions {\n  border: none;\n}\n\n.text-center {\n  justify-content: center !important;\n}\n</style>\n"]}]}