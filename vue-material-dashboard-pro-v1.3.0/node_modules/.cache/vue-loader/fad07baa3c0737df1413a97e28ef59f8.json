{"remainingRequest":"D:\\IBCT\\Vue\\Login-Register-IBCT\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IBCT\\Vue\\Login-Register-IBCT\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\src\\pages\\Dashboard\\Pages\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IBCT\\Vue\\Login-Register-IBCT\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\src\\pages\\Dashboard\\Pages\\Register.vue","mtime":1572255799653},{"path":"D:\\IBCT\\Vue\\Login-Register-IBCT\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IBCT\\Vue\\Login-Register-IBCT\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IBCT\\Vue\\Login-Register-IBCT\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IBCT\\Vue\\Login-Register-IBCT\\vue-material-dashboard-pro-v1.3.0\\vue-material-dashboard-pro-v1.3.0\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\nimport { SignupCard } from \"@/components\";\n\nexport default {\n  components: {\n    SignupCard\n  },\n  data() {\n    return {\n      errors:[],\n      errorpassconfirm : [],\n      username: '',\n      boolean: false, \n      email: '',\n      reg: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,24}))$/,\n      password: '',\n      passwordconfirm: '' \n    }\n  },\n  methods: {\n        checkForm : function() {\n          \n          if(this.username && this.email && this.password && this.passwordconfirm){\n            this.errors = [];\n            this.confirm();\n            return true;\n          } else {\n            this.errors = [];\n            if(this.username=='') {\n              this.errors.push(\"Nhập UserName\");\n            };\n            if(this.email=='') {\n              this.errors.push(\"Nhập email\");\n            };\n            if(this.password=='') {\n              this.errors.push(\"Nhập password\");\n            };\n            if(this.passwordconfirm=='') {\n             this.errors.push(\"Nhập passwordconfirm\");\n            }\n          }\n        },\n\n        isEmailValid: function() {\n          return (this.email == \"\")? \"\" : (this.reg.test(this.email)) ? 'has-success' : 'has-error';\n        },\n\n        confirm : function () {\n          if ( this.password === this.passwordconfirm) {\n            this.errorpassconfirm = [];\n            this.$refs['my-modal'].show();\n            return true;\n          } else {\n            this.errorpassconfirm = [];\n            this.errorpassconfirm.push(\"Nhập lại Password\")\n            return false;\n          }\n        },\n\n        hideModal() {\n          this.$refs['my-modal'].hide()\n        },\n\n        toggleModal() {\n          // We pass the ID of the button that we want to return focus to\n          // when the modal has hidden\n          this.created();\n          this.$swal('Sucess');\n          this.$refs['my-modal'].toggle('#toggle-btn')\n        },\n        created() {\n          axios.get(`http://localhost:8085/api/auth/signup`)\n          .then(response => {\n            this.email = response.data\n          })\n          .catch(err => {\n            this.errors.push(err)\n            err => {\n          if (err.error.messageCode === 'MSG04_USERNAME_EMAIL_IN_USE') {\n            this.usernameErrorMessage = 'Username in use !';\n            this.emailErrorMessage = 'Email in use !';\n            this.showValidate(this.input100Ref);\n            this.showValidate(this.inputEmailRef);\n          }\n\n          if (err.error.messageCode === 'MSG02_USERNAME_IN_USE') {\n            this.usernameErrorMessage = 'Username in use !';\n            this.showValidate(this.input100Ref);\n          }\n\n          if (err.error.messageCode === 'MSG03_EMAIL_IN_USE') {\n            this.emailErrorMessage = 'Email in use !';\n            this.showValidate(this.inputEmailRef);\n          }\n        }\n      );\n          })\n        }\n      }\n};\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/pages/Dashboard/Pages","sourcesContent":["<template>\n  <div class=\"md-layout\">\n    <div class=\"md-layout-item\">\n      <signup-card>\n        <h2 class=\"title text-center\" slot=\"title\">Register</h2>\n        \n        <div\n          class=\"md-layout-item mr-auto\"\n          slot=\"content-right\"\n        >\n            <p v-if=\"errors.length\">\n              <b>Lỗi</b>\n              <ul>\n                <li v-for=\"(error , index) in errors\" v-bind:key = \"index\">{{ error }}</li>\n              </ul>\n            </p>\n          <form >\n  \n            <div class=\"form-group\">\n              <label for=\"username\">UserName:</label>\n              <input type=\"text\" class=\"form-control\" id=\"username\" placeholder=\"Enter username\" name=\"username\" v-model=\"username\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"email\">Email:</label>\n              <div :class=\"['input-group', isEmailValid()]\">\n                <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\" name=\"email\" v-model=\"email\">\n              </div>\n            </div>\n            \n            <div class=\"form-group\">\n              <label for=\"pwd\">Password:</label>\n              <input  v-validate=\"'required'\" type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" name=\"password\" v-model=\"password\">\n            </div>\n            \n            <div class=\"form-group\">\n              <label for=\"pwd\">Password Confirm:</label>\n              <input v-validate=\"'required|confirmed:password'\"  type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password confirm\" name=\"passwordconfirm\" v-model=\"passwordconfirm\">\n            </div>\n            \n             <p v-if=\"errorpassconfirm.length\">\n              <b>Lỗi</b>\n              <ul>\n                <li v-for=\"(error , index) in errorpassconfirm\" v-bind:key = \"index\">{{ error }}</li>\n              </ul>\n            </p>\n          </form>\n          <button type=\"submit\" class=\"btn btn-primary\" v-on:click=\"checkForm \" >Đăng ký</button>\n\n          <b-modal ref=\"my-modal\" hide-footer title=\"Verification\">\n            <div class=\"d-block text-center\">\n              <h3>Hello!</h3>\n              <p>Đây có phải là email <b><i> {{email}} </i></b> của bạn. \n              Nếu đúng bấm Continue để tiếp tục.\n              Nếu không bấm Close để nhập  lại.</p>\n            </div>\n            <b-button class=\"mt-2\" variant=\"outline-warning\" block v-on:click=\"toggleModal\">Continue</b-button>\n            <b-button class=\"mt-3\" variant=\"outline-danger\" block v-on:click=\"hideModal\">Close</b-button>\n          </b-modal>\n        </div>\n      </signup-card>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from 'axios';\nimport { SignupCard } from \"@/components\";\n\nexport default {\n  components: {\n    SignupCard\n  },\n  data() {\n    return {\n      errors:[],\n      errorpassconfirm : [],\n      username: '',\n      boolean: false, \n      email: '',\n      reg: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,24}))$/,\n      password: '',\n      passwordconfirm: '' \n    }\n  },\n  methods: {\n        checkForm : function() {\n          \n          if(this.username && this.email && this.password && this.passwordconfirm){\n            this.errors = [];\n            this.confirm();\n            return true;\n          } else {\n            this.errors = [];\n            if(this.username=='') {\n              this.errors.push(\"Nhập UserName\");\n            };\n            if(this.email=='') {\n              this.errors.push(\"Nhập email\");\n            };\n            if(this.password=='') {\n              this.errors.push(\"Nhập password\");\n            };\n            if(this.passwordconfirm=='') {\n             this.errors.push(\"Nhập passwordconfirm\");\n            }\n          }\n        },\n\n        isEmailValid: function() {\n          return (this.email == \"\")? \"\" : (this.reg.test(this.email)) ? 'has-success' : 'has-error';\n        },\n\n        confirm : function () {\n          if ( this.password === this.passwordconfirm) {\n            this.errorpassconfirm = [];\n            this.$refs['my-modal'].show();\n            return true;\n          } else {\n            this.errorpassconfirm = [];\n            this.errorpassconfirm.push(\"Nhập lại Password\")\n            return false;\n          }\n        },\n\n        hideModal() {\n          this.$refs['my-modal'].hide()\n        },\n\n        toggleModal() {\n          // We pass the ID of the button that we want to return focus to\n          // when the modal has hidden\n          this.created();\n          this.$swal('Sucess');\n          this.$refs['my-modal'].toggle('#toggle-btn')\n        },\n        created() {\n          axios.get(`http://localhost:8085/api/auth/signup`)\n          .then(response => {\n            this.email = response.data\n          })\n          .catch(err => {\n            this.errors.push(err)\n            err => {\n          if (err.error.messageCode === 'MSG04_USERNAME_EMAIL_IN_USE') {\n            this.usernameErrorMessage = 'Username in use !';\n            this.emailErrorMessage = 'Email in use !';\n            this.showValidate(this.input100Ref);\n            this.showValidate(this.inputEmailRef);\n          }\n\n          if (err.error.messageCode === 'MSG02_USERNAME_IN_USE') {\n            this.usernameErrorMessage = 'Username in use !';\n            this.showValidate(this.input100Ref);\n          }\n\n          if (err.error.messageCode === 'MSG03_EMAIL_IN_USE') {\n            this.emailErrorMessage = 'Email in use !';\n            this.showValidate(this.inputEmailRef);\n          }\n        }\n      );\n          })\n        }\n      }\n};\n</script>\n<style>\n\n</style>\n"]}]}